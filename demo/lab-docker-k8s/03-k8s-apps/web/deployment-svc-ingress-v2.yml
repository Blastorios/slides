---
# tag::deployment[]
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: web-full-v2-deployment
  namespace: devoxx
spec:
  replicas: 1
  template:
    metadata:
      labels:
        guilde: web
        faction: server-v2
    spec:
      containers:
        - name: web-full-v2-container
          image: nmengin/web:devoxx-v2
          imagePullPolicy: IfNotPresent
# end::deployment[]

# tag::svc[]
---
apiVersion: v1
kind: Service
metadata:
  name: web-full-v2-service
  namespace: devoxx
  labels:
    guilde: web
spec:
  type: ClusterIP
  ports:
    - port: 80
      name: web-http
  selector:
    guilde: web
    faction: server-v2
# end::svc[]

# tag::ingress[]
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: web-full-v2-ingress
  namespace: devoxx
  labels:
    guilde: web
  annotations:
    kubernetes.io/ingress.class: 'traefik'
    # tag::deleteannot[]
    traefik.frontend.passHostHeader: "false"
    traefik.frontend.rule.type: PathPrefix
    # tag::canary[]
    traefik.ingress.kubernetes.io/service-weights: |
      web-full-service: 80%
      web-full-v2-service: 20%
    # end::canary[]
    # end::deleteannot[]
spec:
  rules:
  - host: {lab-domain}
    http:
      paths:
      - path: /
        backend:
          serviceName: web-full-v2-service
          servicePort: web-http
      # tag::deletepath[]
      - path: /
        backend:
          serviceName: web-full-service
          servicePort: web-http
      # end::deletepath[]
# end::ingress[]
